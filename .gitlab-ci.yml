# .gitlab-ci.yml
# libsir: https://github.com/aremmell/libsir
# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: Copyright (c) 2018-current Ryan M. Lederman

##############################################################################

stages:
  - style
  - build
  - coverage
  - lint
  - coverity

##############################################################################

.Configuration: &Configuration |
  # *Configuration - CI/CD Configuration
  echo -e "section_start:`date +%s`:Configuration_section[collapsed=false]\r\e[0K\033[0;36mCI/CD Configuration ...\033[0m" || true
  ulimit -n 65535 > /dev/null 2>&1 || true
  ccache -X uncompressed > /dev/null 2>&1 || true
  ccache -F 0 -M 0 > /dev/null 2>&1 || true
  test -f 2> /dev/null /.dockerenv && { git config --global --add safe.directory '*' > /dev/null 2>&1 || true; } || true
  echo "Project Name              : ${CI_PROJECT_TITLE:-Unknown}"
  echo "Project Git Commit        : ${CI_COMMIT_SHA:-Unknown}"
  echo "Project Git Branch        : ${CI_COMMIT_BRANCH:-Unknown}"
  echo "GitLab CI User Details    : ${GITLAB_USER_LOGIN:-Unknown} - ${GITLAB_USER_NAME:-Unknown} (${GITLAB_USER_ID:-Unknown}) ${GITLAB_USER_EMAIL:-}"
  echo "GitLab CI Job Name        : ${CI_JOB_NAME:-Unknown}"
  echo "GitLab CI Job ID          : ${CI_JOB_ID:-Unknown}"
  echo "GitLab CI Job Stage       : ${CI_JOB_STAGE:-Unknown}"
  echo "GitLab CI Runner Details  : ${CI_RUNNER_VERSION:-Unknown} (${CI_RUNNER_REVISION:-Unknown})"
  echo -e "section_end:`date +%s`:Configuration_section\r\e[0K" || true

##############################################################################

.CheckLogRemnants: &CheckLogRemnants |
  # *CheckLogRemnants - Check logs/* for remaining files
  echo -e "section_start:`date +%s`:CheckLogRemnants_section[collapsed=false]\r\e[0K\033[0;36mCheck logs/* for remaining files ...\033[0m" || true
  test -f logs/* && { ls -l logs/* && exit 1; false; }; true
  echo -e "section_end:`date +%s`:CheckLogRemnants_section\r\e[0K" || true

##############################################################################

.BuildInformation: &BuildInformation |
  # *BuildInformation - Show build information
  echo -e "section_start:`date +%s`:BuildInformation_section[collapsed=true]\r\e[0K\033[0;36mBuild information ...\033[0m" || true
  find build/bin build/lib -type f -exec sh -c "ls -la {};file {}" \; 2> /dev/null | grep -v "file\.exists" 2> /dev/null || true
  echo -e "section_end:`date +%s`:BuildInformation_section\r\e[0K" || true

##############################################################################

Linux/x86_64 (GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache gcc"
    - export CXX="ccache g++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/i686 (GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CFLAGS="-m32"
    - export CXXFLAGS="-m32"
    - export LDFLAGS="-m32"
    - export CC="ccache gcc"
    - export CXX="ccache g++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (musl-libc, GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache musl-gcc"
    - ${CC:?} --version
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache clang"
    - export CXX="ccache clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/i686 (Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CFLAGS="-m32"
    - export CXXFLAGS="-m32"
    - export LDFLAGS="-m32"
    - export CC="ccache clang"
    - export CXX="ccache clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (AOCC, AOCC++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - . /opt/AMD/aocc-compiler-4.1.0/setenv_AOCC.sh
    - export CC="ccache clang"
    - export CXX="ccache clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/i686 (AOCC, AOCC++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - . /opt/AMD/aocc-compiler-4.1.0/setenv_AOCC.sh
    - export CC="ccache clang"
    - export CXX="ccache clang++"
    - export CFLAGS="-m32"
    - export CXXFLAGS="-m32"
    - export LDFLAGS="-m32"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (Intel C Classic):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/intel:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - . /opt/intel/oneapi/setvars.sh
    - export CC="ccache icc"
    - ${CC:?} -diag-disable=10441 --version
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (Intel oneAPI C, C++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/intel:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - . /opt/intel/oneapi/setvars.sh
    - export CC="ccache icx"
    - export CXX="ccache icpx"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (Oracle Studio C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/oracle:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache /opt/oracle/developerstudio-latest/bin/suncc -m64"
    - ${CC:?} -V
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/i686 (Oracle Studio C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/oracle:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache /opt/oracle/developerstudio-latest/bin/suncc"
    - export CFLAGS="-m32"
    - export LDFLAGS="-m32"
    - ${CC:?} -V
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (NVIDIA HPC C, C++):
  stage: build
  tags:
    - Docker-x64
    - Linux
    - AVX
  image:
    name: registry.gitlab.com/libsir/libsir/nvhpc:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - NVC="$(command -v /opt/nvidia/hpc_sdk/Linux_x86_64/*/compilers/bin/nvc | sort -V | head -n 1)"
    - export NVC
    - export CC="ccache ${NVC:?}"
    - ${CC:?} -V
    - NVCC="$(command -v /opt/nvidia/hpc_sdk/Linux_x86_64/*/compilers/bin/nvc++ | sort -V | head -n 1)"
    - export NVCC
    - export CXX="ccache ${NVCC:?}"
    - ${CXX:?} -V
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (Chibicc, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/chibicc:${PATH:?}"
    - export CC="ccache chibicc"
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Windows/x64 (LLVM-MinGW, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/llvm-mingw:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="x86_64-w64-mingw32-clang"
    - export CXX="x86_64-w64-mingw32-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - export CFLAGS="-Wno-ignored-attributes -Wno-unknown-pragmas"
    - make PLATFORM_LIB_EXT=".a"
    - make tests++ PLATFORM_LIB_EXT=".a"
    - cp -f /opt/llvm-mingw/x86_64-w64-mingw32/bin/libwinpthread-1.dll build/bin
    - cp -f /opt/llvm-mingw/x86_64-w64-mingw32/bin/libunwind.dll build/bin
    - cp -f /opt/llvm-mingw/x86_64-w64-mingw32/bin/libc++.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Windows/Arm (LLVM-MinGW, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/llvm-mingw:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="armv7-w64-mingw32-clang"
    - export CXX="armv7-w64-mingw32-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - export CFLAGS="-Wno-ignored-attributes -Wno-unknown-pragmas"
    - make
    - make tests++
    - cp -f /opt/llvm-mingw/armv7-w64-mingw32/bin/libwinpthread-1.dll build/bin
    - cp -f /opt/llvm-mingw/armv7-w64-mingw32/bin/libunwind.dll build/bin
    - cp -f /opt/llvm-mingw/armv7-w64-mingw32/bin/libc++.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Windows/Arm64 (LLVM-MinGW, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/llvm-mingw:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="aarch64-w64-mingw32-clang"
    - export CXX="aarch64-w64-mingw32-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - CFLAGS="-Wno-ignored-attributes -Wno-unknown-pragmas"
    - make
    - make tests++
    - cp -f /opt/llvm-mingw/aarch64-w64-mingw32/bin/libwinpthread-1.dll build/bin
    - cp -f /opt/llvm-mingw/aarch64-w64-mingw32/bin/libunwind.dll build/bin
    - cp -f /opt/llvm-mingw/aarch64-w64-mingw32/bin/libc++.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################


Linux/x86_64 (AMD Open64, C):
  allow_failure: true
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ao64:latest
  script:
    - *Configuration
    - /opt/x86_open64-4.5.2.1/bin/opencc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/x86_open64-4.5.2.1/bin:${PATH:?}"
    - export CC="opencc"
    - export NO_DEFAULT_CFLAGS="1"
    - export SIR_CSTD="-std=gnu9x"
    - export CFLAGS="-Iinclude -Wall -Wextra -Wno-missing-braces -Wno-missing-field-initializers -Wno-strict-aliasing -fno-strict-aliasing -fPIC -O3"
    - export LDFLAGS="-lmcompat"
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Windows/i686 (LLVM-MinGW, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/llvm-mingw:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="i686-w64-mingw32-clang"
    - export CXX="i686-w64-mingw32-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - export CFLAGS="-Wno-ignored-attributes -Wno-incompatible-function-pointer-types -Wno-unknown-pragmas"
    - make PLATFORM_LIB_EXT=".a"
    - make tests++ PLATFORM_LIB_EXT=".a"
    - cp -f /opt/llvm-mingw/i686-w64-mingw32/bin/libwinpthread-1.dll build/bin
    - cp -f /opt/llvm-mingw/i686-w64-mingw32/bin/libunwind.dll build/bin
    - cp -f /opt/llvm-mingw/i686-w64-mingw32/bin/libc++.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Android/x86_64 (API Level 21, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export LDFLAGS="-static"
    - export CC="ccache x86_64-linux-android21-clang"
    - export CXX="ccache x86_64-linux-android21-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make SIR_NO_PLUGINS=1
    - make tests++ SIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Android/i686 (API Level 21, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export LDFLAGS="-static"
    - export CC="ccache i686-linux-android21-clang"
    - export CXX="ccache i686-linux-android21-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make SIR_NO_PLUGINS=1
    - make tests++ SIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Android/ARM64 (API Level 21, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export CC="ccache aarch64-linux-android21-clang"
    - export CXX="ccache aarch64-linux-android21-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Android/ARMv7A (API Level 21, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export CC="ccache armv7a-linux-androideabi21-clang"
    - export CXX="ccache armv7a-linux-androideabi21-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Android/x86_64 (API Level 33, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export LDFLAGS="-static"
    - export CC="ccache x86_64-linux-android33-clang"
    - export CXX="ccache x86_64-linux-android33-clang++"
    - make SIR_NO_PLUGINS=1
    - make tests++ SIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Android/i686 (API Level 33, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export LDFLAGS="-static"
    - export CC="ccache i686-linux-android33-clang"
    - export CXX="ccache i686-linux-android33-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make SIR_NO_PLUGINS=1
    - make tests++ SIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Android/ARM64 (API Level 33, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export CC="ccache aarch64-linux-android33-clang"
    - export CXX="ccache aarch64-linux-android33-clang++"
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Android/ARMv7A (API Level 33, Clang, Clang++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/ndk:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:?}"
    - export CC="ccache armv7a-linux-androideabi33-clang"
    - export CXX="ccache armv7a-linux-androideabi33-clang++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Windows/Arm64 (MSVC, C, C++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/msvc:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="/opt/msvc/bin/arm64:${PATH:?}"
    - cl.exe 2>&1 | head -3 | grep -v '^$' || true
    - mkdir -p build/bin
    - cl.exe src/*.c example/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirexample.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirtests.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -c -Itests -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /DSIR_NO_PLUGINS=1
    - rm -f tests.obj > /dev/null 2>&1 || true
    - rm -f example.obj > /dev/null 2>&1 || true
    - cl.exe tests/*.cc -c -Iinclude /EHsc /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c++20 /wd4996 /DSIR_NO_PLUGINS=1
    - link.exe /OUT:build\\bin\\sirtests++.exe *.obj
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Windows/Arm (MSVC, C, C++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/msvc:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - PATH="/opt/msvc/bin/arm:${PATH:?}"
    - export PATH
    - cl.exe 2>&1 | head -3 | grep -v '^$' || true
    - mkdir -p build/bin
    - cl.exe src/*.c example/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirexample.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirtests.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -c -Itests -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /DSIR_NO_PLUGINS=1
    - rm -f tests.obj > /dev/null 2>&1 || true
    - rm -f example.obj > /dev/null 2>&1 || true
    - cl.exe tests/*.cc -c -Iinclude /EHsc /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c++20 /wd4996 /DSIR_NO_PLUGINS=1
    - link.exe /OUT:build\\bin\\sirtests++.exe *.obj
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Windows/x64 (MSVC, C, C++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/msvc:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - PATH="/opt/msvc/bin/x64:${PATH:?}"
    - export PATH
    - cl.exe 2>&1 | head -3 | grep -v '^$' || true
    - mkdir -p build/bin
    - cl.exe src/*.c example/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirexample.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirtests.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -c -Itests -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /DSIR_NO_PLUGINS=1
    - rm -f tests.obj > /dev/null 2>&1 || true
    - rm -f example.obj > /dev/null 2>&1 || true
    - cl.exe tests/*.cc -c -Iinclude /EHsc /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c++20 /wd4996 /DSIR_NO_PLUGINS=1
    - link.exe /OUT:build\\bin\\sirtests++.exe *.obj
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Windows/i686 (MSVC, C, C++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/msvc:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - PATH="/opt/msvc/bin/x86:${PATH:?}"
    - export PATH
    - mkdir -p build/bin
    - cl.exe src/*.c example/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirexample.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /Febuild\\bin\\sirtests.exe /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -c -Itests -Iinclude /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c11 /experimental:c11atomics /wd4996 /DSIR_NO_PLUGINS=1
    - rm -f tests.obj > /dev/null 2>&1 || true
    - rm -f example.obj > /dev/null 2>&1 || true
    - cl.exe tests/*.cc -c -Iinclude /EHsc /Ob3 /volatile:iso /GS- /Oi /O2 /W4 /std:c++20 /wd4996 /DSIR_NO_PLUGINS=1
    - link.exe /OUT:build\\bin\\sirtests++.exe *.obj
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Windows/x64 (MinGW-MSVCRT, GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="ccache x86_64-w64-mingw32-gcc"
    - export CXX="ccache x86_64-w64-mingw32-g++"
    - export SIR_MSVCRT_MINGW="1"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - cp -f /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libwinpthread-1.dll build/bin
    - cp -f /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libstdc++-6.dll build/bin
    - cp -f /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgcc*.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Windows/x64 (MinGW-UCRT, GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="ccache x86_64-w64-mingw32ucrt-gcc"
    - export CXX="ccache x86_64-w64-mingw32ucrt-g++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - cp -f /usr/x86_64-w64-mingw32ucrt/sys-root/mingw/bin/libwinpthread-1.dll build/bin
    - cp -f /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libstdc++-6.dll build/bin
    - cp -f /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgcc*.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Windows/i686 (MinGW, GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - export CC="ccache i686-w64-mingw32-gcc"
    - export CXX="ccache i686-w64-mingw32-g++"
    - export SIR_MSVCRT_MINGW="1"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - cp -f /usr/i686-w64-mingw32/sys-root/mingw/bin/libwinpthread-1.dll build/bin
    - cp -f /usr/i686-w64-mingw32/sys-root/mingw/bin/libstdc++-6.dll build/bin
    - cp -f /usr/i686-w64-mingw32/sys-root/mingw/bin/libgcc*.dll build/bin
    - rm -f build/bin/mcmb.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - export WINEDEBUG=-all
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests++.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests++.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Cygwin/x86_64 (GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache x86_64-pc-cygwin-gcc"
    - export CXX="ccache x86_64-pc-cygwin-g++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make
    - make tests++
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Cygwin/i686 (GCC):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export CC="ccache i686-pc-cygwin-gcc"
    - ${CC:?} --version
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Coverage:
  stage: coverage
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
    - job: Linux/x86_64 (GCC, G++)
    - job: Windows/x64 (MSVC, C, C++)
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Coverage ...
      echo -e "section_start:`date +%s`:Cover_section[collapsed=true]\r\e[0K\033[0;36mCoverage test ...\033[0m" || true
    - export NO_CLEANUP="1"
    - export NO_APTSETUP="1"
    - ./.coveralls.sh
    - echo -e "section_end:`date +%s`:Cover_section\r\e[0K" || true
    - |
      # Compress artifacts ...
      echo -e "section_start:`date +%s`:Comp_section[collapsed=true]\r\e[0K\033[0;36mCompress artifacts ...\033[0m" || true
    - lzip -9 -s 512Mi -v coverage* || true
    - echo -e "section_end:`date +%s`:Comp_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - cover*
  retry: 2
  interruptible: true

##############################################################################

Style check:
  stage: style
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Style ...
      echo -e "section_start:`date +%s`:Style_section[collapsed=false]\r\e[0K\033[0;36mStyle test ...\033[0m" || true
    - ./.lint.sh spaces
    - ./.lint.sh tabs
    - ./.lint.sh whitespace
    - echo -e "section_end:`date +%s`:Style_section\r\e[0K" || true
  dependencies: []
  retry: 2
  interruptible: true

##############################################################################

MSVC Static Analyzer:
  stage: lint
  needs:
    - job: Windows/x64 (MSVC, C, C++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/msvc:latest
  script:
    - *Configuration
    - |
      # MSVC Analyzer ...
      echo -e "section_start:`date +%s`:MSVCA_section[collapsed=true]\r\e[0K\033[0;36mMSVC Analyzer test ...\033[0m" || true
    - PATH="/opt/msvc/bin/x64:${PATH:?}"
    - export PATH
    - cl.exe 2>&1 | head -3 | grep -v '^$' || true
    - cl.exe src/*.c example/*.c -Iinclude /Oi /O2 /GL /W4 /WX /analyze /std:c11 /experimental:c11atomics /sdl /wd4996 /wd28251 /DSIR_NO_PLUGINS=1
    - cl.exe src/*.c tests/*.c -Iinclude /Oi /O2 /GL /W4 /WX /analyze /std:c11 /experimental:c11atomics /sdl /wd4996 /wd28251 /DSIR_NO_PLUGINS=1
    - rm -f tests.obj > /dev/null 2>&1 || true
    - rm -f example.obj > /dev/null 2>&1 || true
    - cl.exe tests/*.cc -c -Itests -Iinclude /GL /analyze /EHsc /Ob3 /volatile:iso /Oi /O2 /W4 /std:c++20 /wd4996 /wd28251 /wd4127 /sdl /DSIR_NO_PLUGINS=1
    - link.exe /LTCG /OUT:sirtests++.exe *.obj
    - echo -e "section_end:`date +%s`:MSVCA_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
  retry: 2
  interruptible: true

##############################################################################

Clang Static Analyzer:
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
    - Docker-x64-fast
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Clang Analyzer ...
      echo -e "section_start:`date +%s`:ClangA_section[collapsed=true]\r\e[0K\033[0;36mClang Analyzer test ...\033[0m" || true
    - ./.lint.sh scanbuild
    - echo -e "section_end:`date +%s`:ClangA_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Clang (Extra Warnings):
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
    - Docker-x64-fast
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Clang Extra Warnings ...
      echo -e "section_start:`date +%s`:ClangEx_section[collapsed=true]\r\e[0K\033[0;36mClang Extra Warnings test ...\033[0m" || true
    - ./.lint.sh extra
    - echo -e "section_end:`date +%s`:ClangEx_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

GCC (Extra Warnings):
  stage: lint
  needs:
    - job: Linux/x86_64 (GCC, G++)
  tags:
    - Docker-x64
    - Linux
    - Docker-x64-fast
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # GCC Extra Warnings ...
      echo -e "section_start:`date +%s`:GCCEx_section[collapsed=true]\r\e[0K\033[0;36mGCC Extra Warnings test ...\033[0m" || true
    - ./.lint.sh gccextra
    - echo -e "section_end:`date +%s`:GCCEx_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Flawfinder:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Flawfinder ...
      echo -e "section_start:`date +%s`:Flawfinder_section[collapsed=true]\r\e[0K\033[0;36mFlawfinder ...\033[0m" || true
    - ./.lint.sh flawfinder
    - echo -e "section_end:`date +%s`:Flawfinder_section\r\e[0K" || true
  dependencies: []
  retry: 2
  interruptible: true

##############################################################################

Cppcheck:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Cppcheck ...
      echo -e "section_start:`date +%s`:CppcheckA_section[collapsed=true]\r\e[0K\033[0;36mCppcheck ...\033[0m" || true
    - ./.lint.sh cppcheck
    - mkdir -p cppcheck > /dev/null 2>&1 || true
    - touch cppcheck.xml > /dev/null 2>&1 || true
    - echo -e "section_end:`date +%s`:CppcheckA_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - cppcheck/
      - cppcheck.xml
  retry: 2
  interruptible: true

##############################################################################

Valgrind:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Valgrind ...
      echo -e "section_start:`date +%s`:Valgrind_section[collapsed=true]\r\e[0K\033[0;36mValgrind ...\033[0m" || true
    - ./.lint.sh valgrind
    - echo -e "section_end:`date +%s`:Valgrind_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

REUSE:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # REUSE ...
      echo -e "section_start:`date +%s`:REUSE_section[collapsed=false]\r\e[0K\033[0;36mREUSE ...\033[0m" || true
    - ./.lint.sh reuse
    - echo -e "section_end:`date +%s`:REUSE_section\r\e[0K" || true
  dependencies: []
  retry: 2
  interruptible: true

##############################################################################

PVS-Studio:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # PVS-Studio Configuration ...
      echo -e "section_start:`date +%s`:PVSConfig_section[collapsed=true]\r\e[0K\033[0;36mPVS-Studio Configuration ...\033[0m" || true
    - pvs-studio-analyzer credentials "${PVS_STUDIO_NAME:?}" "${PVS_STUDIO_KEY:?}" || true
    - echo -e "section_end:`date +%s`:PVSConfig_section\r\e[0K" || true
    - |
      # PVS-Studio Analysis ...
      echo -e "section_start:`date +%s`:PVSStudio_section[collapsed=true]\r\e[0K\033[0;36mPVS-Studio Analysis ...\033[0m" || true
    - pvs-studio --version
    - ./.lint.sh pvs
    - mkdir -p pvsreport > /dev/null 2>&1 || true
    - touch pvs.log > /dev/null 2>&1 || true
    - echo -e "section_end:`date +%s`:PVSStudio_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - pvsreport/
      - pvs.log
  retry: 2
  interruptible: true

##############################################################################

Coverity:
  only:
    - master
  when: manual
  allow_failure: true
  stage: coverity
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Coverity Submission ...
      echo -e "section_start:`date +%s`:Coverity_section[collapsed=true]\r\e[0K\033[0;36mCoverity Submission ...\033[0m" || true
    - ./.coverity.sh
    - echo -e "section_end:`date +%s`:Coverity_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
  retry: 2
  interruptible: true

##############################################################################

Windows/i686 (OrangeC, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/orangec:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export WINEDEBUG=-all
    - wine64 /opt/orangec/bin/occ.exe --version
    - mkdir -p build/bin
    - wine64 /opt/orangec/bin/occ.exe /1 /O2 -Iinclude src/*.c example/*.c -o build/bin/sirexample.exe -DSIR_NO_PLUGINS=1
    - wine64 /opt/orangec/bin/occ.exe /1 /O2 -Iinclude src/*.c tests/*.c -o build/bin/sirtests.exe -DSIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (DMD64 ImportC, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/dmd:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin
    - touch build/bin/file.exists
    - mkdir -p logs
    - mkdir -p d
    - cd d
    - ln -s ../src/* ../include/sir/* ../include/sir.h .
    - ln -s . sir
    - ln -s ../example/* .
    - dmd --version
    - dmd -m64 -fPIC -fPIE -O -release -check=off -boundscheck=off -P=-DSIR_NO_PLUGINS=1 *.c -of=../build/bin/sirexample
    - rm -f example*
    - ln -s ../tests/* .
    - dmd -m64 -fPIC -fPIE -O -release -check=off -boundscheck=off -P=-DSIR_NO_PLUGINS=1 *.c -of=../build/bin/sirtests
    - cd ..
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/i686 (DMD64 ImportC, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/dmd:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - mkdir -p build/bin
    - touch build/bin/file.exists
    - mkdir -p logs
    - mkdir -p d
    - cd d
    - ln -s ../src/* ../include/sir/* ../include/sir.h .
    - ln -s . sir
    - ln -s ../example/* .
    - dmd --version
    - dmd -m32 -fPIC -fPIE -O -release -check=off -boundscheck=off -P=-DSIR_NO_PLUGINS=1 *.c -of=../build/bin/sirexample
    - rm -f example*
    - ln -s ../tests/* .
    - dmd -m32 -fPIC -fPIE -O -release -check=off -boundscheck=off -P=-DSIR_NO_PLUGINS=1 *.c -of=../build/bin/sirtests
    - cd ..
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

GCC Static Analyzer:
  stage: lint
  needs:
    - job: Linux/x86_64 (GCC, G++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # GCC Static Analyzer ...
      echo -e "section_start:`date +%s`:GCCSA_section[collapsed=true]\r\e[0K\033[0;36mGCC Static Analyzer ...\033[0m" || true
    - export CC="gcc"
    - export CXX="g++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - export CFLAGS="-g -fanalyzer -Wno-analyzer-malloc-leak -fanalyzer-verbosity=3 -Werror -DSIR_NO_STD_FORMAT=1"
    - make
    - make tests++
    - make clean
    - echo -e "section_end:`date +%s`:GCCSA_section\r\e[0K" || true
    - |
      # GCC Static Analyzer - Taint ...
      echo -e "section_start:`date +%s`:GCCST_section[collapsed=true]\r\e[0K\033[0;36mGCC Static Analyzer - Taint ...\033[0m" || true
    - export CFLAGS="-g -fanalyzer -fanalyzer-checker=taint -fanalyzer-verbosity=3 -Werror -DSIR_NO_STD_FORMAT=1"
    - make
    - make tests++
    - make clean
    - mkdir -p build > /dev/null 2>&1 || true
    - echo -e "section_end:`date +%s`:GCCST_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

##############################################################################

Windows/x64 (Embarcadero, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/embarcadero:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export WINEDEBUG=-all
    - wine64 ~/.wine/drive_c/Program\ Files\ \(x86\)/Embarcadero/Studio/22.0/bin/bcc64.exe --version
    - mkdir -p build/bin
    - wine64 ~/.wine/drive_c/Program\ Files\ \(x86\)/Embarcadero/Studio/22.0/bin/bcc64.exe tests/*.c src/* -Iinclude -tM -DSIR_NO_PLUGINS=1 -Wall -Wextra -Wno-missing-braces -Wno-missing-field-initializers
    - mv tests.exe build/bin/sirtests.exe
    - wine64 ~/.wine/drive_c/Program\ Files\ \(x86\)/Embarcadero/Studio/22.0/bin/bcc64.exe example/*.c src/* -Iinclude -tM -DSIR_NO_PLUGINS=1 -Wall -Wextra -Wno-missing-braces -Wno-missing-field-initializers
    - mv example.exe build/bin/sirexample.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Windows/i686 (Embarcadero, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/embarcadero:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export WINEDEBUG=-all
    - wine64 ~/.wine/drive_c/Program\ Files\ \(x86\)/Embarcadero/Studio/22.0/bin/bcc32x.exe --version
    - mkdir -p build/bin
    - wine64 ~/.wine/drive_c/Program\ Files\ \(x86\)/Embarcadero/Studio/22.0/bin/bcc32x.exe tests/*.c src/* -Iinclude -tM -DSIR_NO_PLUGINS=1 -Wall -Wextra -Wno-missing-braces -Wno-missing-field-initializers
    - mv tests.exe build/bin/sirtests.exe
    - wine64 ~/.wine/drive_c/Program\ Files\ \(x86\)/Embarcadero/Studio/22.0/bin/bcc32x.exe example/*.c src/* -Iinclude -tM -DSIR_NO_PLUGINS=1 -Wall -Wextra -Wno-missing-braces -Wno-missing-field-initializers
    - mv example.exe build/bin/sirexample.exe
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - mkdir -p logs
    - touch build/bin/file.exists
    - screen -mDL sh -c 'wine64 build/bin/sirexample.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirexample.out
    - screen -mDL sh -c 'wine64 build/bin/sirtests.exe; printf "\n%s\n" "$?"' && tail -1 screenlog.0 | dos2unix -f | ansifilter | grep -qE '^0$'
    - mv -f screenlog.0 sirtests.out
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - screenlog.0
      - ./*.out
  retry: 2
  interruptible: true

##############################################################################

Clang Sanitizer (UB, 32-bit, C):
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build32_section[collapsed=true]\r\e[0K\033[0;36mBuild 32-bit ...\033[0m" || true
    - export UBSAN_OPTIONS="print_stacktrace=1"
    - export UBSAN_FLAGS="-fsanitize=undefined,float-divide-by-zero,unsigned-integer-overflow,implicit-conversion,local-bounds,nullability-arg,nullability-assign,nullability-return"
    - export UBSAN_CFLAGS="${UBSAN_FLAGS:?} -fno-omit-frame-pointer -fno-sanitize-trap -fno-sanitize-recover"
    - export CC="ccache clang -m32 ${UBSAN_CFLAGS:?} -Werror"
    - export LDFLAGS="${UBSAN_FLAGS:?}"
    - ${CC:?} --version
    - make SIR_DEBUG=1 SIR_SELFLOG=1
    - echo -e "section_end:`date +%s`:Build32_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test32_section[collapsed=true]\r\e[0K\033[0;36mTest 32-bit ...\033[0m" || true
    - stdbuf -o L ./build/bin/sirexample 2>&1
    - stdbuf -o L ./build/bin/sirtests 2>&1
    - echo -e "section_end:`date +%s`:Test32_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Clang Sanitizer (UB, 64-bit, C):
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build64_section[collapsed=true]\r\e[0K\033[0;36mBuild 64-bit ...\033[0m" || true
    - export UBSAN_OPTIONS="print_stacktrace=1"
    - export UBSAN_FLAGS="-fsanitize=undefined,float-divide-by-zero,unsigned-integer-overflow,implicit-conversion,local-bounds,nullability-arg,nullability-assign,nullability-return"
    - export UBSAN_CFLAGS="${UBSAN_FLAGS:?} -fno-omit-frame-pointer -fno-sanitize-trap -fno-sanitize-recover"
    - export CC="ccache clang -m64 ${UBSAN_CFLAGS:?} -Werror"
    - export LDFLAGS="${UBSAN_FLAGS:?}"
    - ${CC:?} --version
    - make SIR_DEBUG=1 SIR_SELFLOG=1
    - echo -e "section_end:`date +%s`:Build64_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test64_section[collapsed=true]\r\e[0K\033[0;36mTest 64-bit ...\033[0m" || true
    - stdbuf -o L ./build/bin/sirexample 2>&1
    - stdbuf -o L ./build/bin/sirtests 2>&1
    - echo -e "section_end:`date +%s`:Test64_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Clang Sanitizer (Memory, C):
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export MSAN_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins=2"
    - export MSAN_CFLAGS="${MSAN_FLAGS:?} -fno-omit-frame-pointer -fno-sanitize-trap -fno-sanitize-recover"
    - export CC="ccache clang -m64 ${MSAN_CFLAGS:?} -Werror"
    - export LDFLAGS="${MSAN_FLAGS:?}"
    - ${CC:?} --version
    - make SIR_DEBUG=1 SIR_SELFLOG=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - stdbuf -o L ./build/bin/sirexample 2>&1
    - stdbuf -o L ./build/bin/sirtests 2>&1
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Clang Sanitizer (Address, 64-bit, C, C++):
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build64_section[collapsed=true]\r\e[0K\033[0;36mBuild 64-bit ...\033[0m" || true
    - export ASAN_OPTIONS="check_initialization_order=1"
    - export ASAN_FLAGS="-fsanitize=address -fsanitize-address-use-after-scope"
    - export ASAN_CFLAGS="${ASAN_FLAGS:?} -fno-omit-frame-pointer -fno-sanitize-trap -fno-sanitize-recover"
    - export CC="ccache clang -m64 ${ASAN_CFLAGS:?} -Werror"
    - export CXX="ccache clang++ -m64 ${ASAN_CFLAGS:?} -Werror"
    - export LDFLAGS="${ASAN_FLAGS:?}"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make SIR_DEBUG=1 SIR_SELFLOG=1
    - make tests++ SIR_DEBUG=1 SIR_SELFLOG=1
    - echo -e "section_end:`date +%s`:Build64_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test64_section[collapsed=true]\r\e[0K\033[0;36mTest 64-bit ...\033[0m" || true
    - stdbuf -o L ./build/bin/sirexample 2>&1
    - stdbuf -o L ./build/bin/sirtests 2>&1
    - stdbuf -o L ./build/bin/sirtests++ 2>&1
    - echo -e "section_end:`date +%s`:Test64_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Clang Sanitizer (Address, 32-bit, C, C++):
  stage: lint
  needs:
    - job: Linux/x86_64 (Clang, Clang++)
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build32_section[collapsed=true]\r\e[0K\033[0;36mBuild 32-bit ...\033[0m" || true
    - export ASAN_OPTIONS="check_initialization_order=1"
    - export ASAN_FLAGS="-fsanitize=address -fsanitize-address-use-after-scope"
    - export ASAN_CFLAGS="${ASAN_FLAGS:?} -fno-omit-frame-pointer -fno-sanitize-trap -fno-sanitize-recover"
    - export CC="ccache clang -m32 ${ASAN_CFLAGS:?} -Werror"
    - export CXX="ccache clang++ -m32 ${ASAN_CFLAGS:?} -Werror"
    - export LDFLAGS="${ASAN_FLAGS:?}"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make SIR_DEBUG=1 SIR_SELFLOG=1
    - env CXXFLAGS="-D__MINGW32__ -U__MINGW64_VERSION_MAJOR" make tests++ SIR_DEBUG=1 SIR_SELFLOG=1
    - echo -e "section_end:`date +%s`:Build32_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test32_section[collapsed=true]\r\e[0K\033[0;36mTest 32-bit ...\033[0m" || true
    - stdbuf -o L ./build/bin/sirexample 2>&1
    - stdbuf -o L ./build/bin/sirtests 2>&1
    - stdbuf -o L ./build/bin/sirtests++ 2>&1
    - echo -e "section_end:`date +%s`:Test32_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

DUMA:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/base:latest
  script:
    - *Configuration
    - duma true
    - |
      # DUMA ...
      echo -e "section_start:`date +%s`:DUMA_section[collapsed=true]\r\e[0K\033[0;36mDUMA ...\033[0m" || true
    - ./.lint.sh duma
    - echo -e "section_end:`date +%s`:DUMA_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - ./duma*.log
  retry: 2
  interruptible: true

##############################################################################

Oracle Lint:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/oracle:latest
  script:
    - *Configuration
    - |
      # Lint ...
      echo -e "section_start:`date +%s`:Lint_section[collapsed=true]\r\e[0K\033[0;36mLint ...\033[0m" || true
    - /opt/oracle/developerstudio-latest/bin/lint -V
    - make clean
    - rm -f orstlint.txt > /dev/null 2>&1 || true
    - export CFLAGS="-errsecurity=extended -errtags=yes -erroff=E_GLOBAL_COULD_BE_STATIC2,E_FUNC_RET_ALWAYS_IGNOR2,E_FUNC_RET_MAYBE_IGNORED2,E_NAME_DEF_NOT_USED2,E_SEC_READLINK_WARN,E_CONST_EXPR,E_SEC_RAND_WARN,E_PTRDIFF_OVERFLOW,E_CONSTANT_CONDITION,E_STATIC_UNUSED -fd -m64 -XCC=yes -errchk=structarg,parentheses,signext,locfmtchk -errfmt=src -errtags=yes -Xalias_level=any"
    - eval /opt/oracle/developerstudio-latest/bin/lint -DSUNPRO=1 -DSUNLINT=1 ${CFLAGS:?} src/*.c -Iinclude -Itests tests/*.c 2>&1 | tee orstlint.txt
    - eval /opt/oracle/developerstudio-latest/bin/lint -DSUNPRO=1 -DSUNLINT=1 ${CFLAGS:?} src/*.c -Iinclude -Iexample example/*.c 2>&1 | tee -a orstlint.txt
    - ( grep "E_" orstlint.txt || exit 0 && exit 1 )
    - mkdir -p build > /dev/null 2>&1 || true
    - mkdir -p logs > /dev/null 2>&1 || true
    - echo -e "section_end:`date +%s`:Lint_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - orstlint.txt
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (musl-libc, Kefir, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/kefir:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export KEFIR_RTINC="/opt/kefir-musl/include/kefir/runtime"
    - export PATH="/opt/kefir-musl/bin:${PATH:?}"
    - export CC="ccache kefir"
    - ${CC:?} --compiler-info
    - ${CC:?} --environment-info
    - make SIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (Kefir, C):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/kefir:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export KEFIR_RTINC="/opt/kefir/include/kefir/runtime"
    - export PATH="/opt/kefir/bin:${PATH:?}"
    - export CC="ccache kefir"
    - ${CC:?} --compiler-info
    - ${CC:?} --environment-info
    - make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################

Linux/x86_64 (uClibc-ng, GCC, G++):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/uclibc-ng:latest
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - export PATH="${HOME:?}/x-tools/x86_64-pc-linux-uclibc/x86_64-pc-linux-uclibc/bin:${HOME:?}/x-tools/x86_64-pc-linux-uclibc/bin:${PATH:?}"
    - export LDFLAGS="-static"
    - export CC="ccache x86_64-pc-linux-uclibc-gcc"
    - export CXX="ccache x86_64-pc-linux-uclibc-g++"
    - ${CC:?} --version
    - ${CXX:?} --version
    - make SIR_NO_PLUGINS=1
    - make tests++ SIR_NO_PLUGINS=1
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *BuildInformation
    - |
      # Test ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - build/bin/sirtests++
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
    - *CheckLogRemnants
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

##############################################################################
