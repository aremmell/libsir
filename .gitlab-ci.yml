# SPDX-License-Identifier: MIT
# Copyright (c) 2018-current Ryan M. Lederman

############################################################################

stages:
  - build
  - coverage
  - smoke_test
  - lint

############################################################################

.Configuration: &Configuration |
  # *Configuration - CI/CD Configuration
  echo -e "section_start:`date +%s`:Configuration_section[collapsed=false]\r\e[0K\033[0;36mCI/CD Configuration ...\033[0m" || true
  ulimit -n 65535 > /dev/null 2>&1 || true
  ccache -X uncompressed > /dev/null 2>&1 || true
  ccache -F 0 -M 0 > /dev/null 2>&1 || true
  test -f 2> /dev/null /.dockerenv && { git config --global --add safe.directory '*' > /dev/null 2>&1 || true; } || true
  echo "Project Name              : ${CI_PROJECT_TITLE:-Unknown}"
  echo "Project Git Commit        : ${CI_COMMIT_SHA:-Unknown}"
  echo "Project Git Branch        : ${CI_COMMIT_BRANCH:-Unknown}"
  echo "GitLab CI User Details    : ${GITLAB_USER_LOGIN:-Unknown} - ${GITLAB_USER_NAME:-Unknown} (${GITLAB_USER_ID:-Unknown}) ${GITLAB_USER_EMAIL:-}"
  echo "GitLab CI Job Name        : ${CI_JOB_NAME:-Unknown}"
  echo "GitLab CI Job ID          : ${CI_JOB_ID:-Unknown}"
  echo "GitLab CI Job Stage       : ${CI_JOB_STAGE:-Unknown}"
  echo "GitLab CI Runner Details  : ${CI_RUNNER_VERSION:-Unknown} (${CI_RUNNER_REVISION:-Unknown})"
  echo -e "section_end:`date +%s`:Configuration_section\r\e[0K" || true

############################################################################

Linux/x86_64 (GCC):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env CC="ccache gcc" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Linux/x86_64 (GCC, musl-libc):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - musl-gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env CC="ccache musl-gcc" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Linux/x86_64 (Clang):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - clang --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env CC="ccache clang" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Linux/x86_64 (AOCC):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - . /opt/AMD/aocc-compiler-4.0.0/setenv_AOCC.sh
    - clang --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env CC="ccache clang" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Linux/x86_64 (Chibicc):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env PATH="/opt/chibicc:${PATH:-}" CC="ccache /opt/chibicc/chibicc" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - build/bin/sirexample
    - build/bin/sirtests
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Windows/x64 (MinGW-MSVCRT):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - x86_64-w64-mingw32-gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - env CC="ccache x86_64-w64-mingw32-gcc" make SIR_MSVCRT_MINGW=1
    - cp -f /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libwinpthread-1.dll build/bin
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - true wine64 build/bin/sirexample.exe
    - true wine64 build/bin/sirtests || true
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Windows/x64 (MinGW-UCRT):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - x86_64-w64-mingw32ucrt-gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - env CC="ccache x86_64-w64-mingw32ucrt-gcc" make
    - cp -f /usr/x86_64-w64-mingw32ucrt/sys-root/mingw/bin/libwinpthread-1.dll build/bin
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - true wine64 build/bin/sirexample.exe
    - true wine64 build/bin/sirtests || true
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Windows/i686 (MinGW):
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - i686-w64-mingw32-gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - mkdir -p build/bin && touch -f build/bin/mcmb.exe
    - env CC="ccache i686-w64-mingw32-gcc" make SIR_MSVCRT_MINGW=1
    - cp -f /usr/i686-w64-mingw32/sys-root/mingw/bin/libwinpthread-1.dll build/bin
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Tests ...
      echo -e "section_start:`date +%s`:Test_section[collapsed=true]\r\e[0K\033[0;36mTests ...\033[0m" || true
    - true wine64 build/bin/sirexample.exe
    - true wine64 build/bin/sirtests || true
    - echo -e "section_end:`date +%s`:Test_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Cygwin/x86_64:
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - x86_64-pc-cygwin-gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env CC="ccache x86_64-pc-cygwin-gcc" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

############################################################################

Cygwin/i686:
  stage: build
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - i686-pc-cygwin-gcc --version
    - |
      # Build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make clean
    - env CC="ccache i686-pc-cygwin-gcc" make
    - echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
  retry: 2
  interruptible: true

############################################################################

Coverage:
  stage: coverage
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - env NO_CLEANUP=1 NO_APTSETUP=1 ./.coveralls.sh
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - cover*
  retry: 2
  interruptible: true

############################################################################

Smoke test:
  stage: smoke_test
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - make mcmb
    - ./.lint.sh smoke
  dependencies: []
  retry: 2
  interruptible: true

############################################################################

Clang Analyzer:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - ./.lint.sh scanbuild
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Clang Extra:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - ./.lint.sh extra
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

Flawfinder:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - ./.lint.sh flawfinder
  dependencies: []
  retry: 2
  interruptible: true

############################################################################

Cppcheck:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - ./.lint.sh cppcheck
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - cppcheck/
      - cppcheck.xml
  retry: 2
  interruptible: true

############################################################################

Valgrind:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - ./.lint.sh valgrind
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
  retry: 2
  interruptible: true

############################################################################

REUSE:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - make clean
    - ./.lint.sh reuse
  dependencies: []
  retry: 2
  interruptible: true

############################################################################

PVS-Studio:
  stage: lint
  tags:
    - Docker-x64
    - Linux
  image:
    name: registry.gitlab.com/libsir/libsir/helper:latest
    entrypoint: [ '/bin/sh', '-c', 'adduser -m sir && exec sudo -i -u sir' ]
  script:
    - *Configuration
    - pvs-studio-analyzer credentials "${PVS_STUDIO_NAME:?}" "${PVS_STUDIO_KEY:?}" || true
    - make clean
    - ./.lint.sh pvs
  dependencies: []
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - build/
      - logs/
      - pvsreport/
      - pvs.log
  retry: 2
  interruptible: true

############################################################################
