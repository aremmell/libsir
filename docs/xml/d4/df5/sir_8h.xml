<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d4/df5/sir_8h" kind="file" language="C++">
    <compoundname>sir.h</compoundname>
    <includes refid="db/ddc/sirplatform_8h" local="yes">sirplatform.h</includes>
    <includes refid="dc/dba/sirtypes_8h" local="yes">sirtypes.h</includes>
    <includedby refid="d0/d29/main_8c" local="yes">main.c</includedby>
    <includedby refid="dc/d39/sir_8c" local="yes">sir.c</includedby>
    <incdepgraph>
      <node id="58">
        <label>sys/stat.h</label>
      </node>
      <node id="53">
        <label>stdbool.h</label>
      </node>
      <node id="52">
        <label>stdarg.h</label>
      </node>
      <node id="62">
        <label>stdatomic.h</label>
      </node>
      <node id="50">
        <label>assert.h</label>
      </node>
      <node id="54">
        <label>stdint.h</label>
      </node>
      <node id="56">
        <label>stdlib.h</label>
      </node>
      <node id="51">
        <label>errno.h</label>
      </node>
      <node id="64">
        <label>syslog.h</label>
      </node>
      <node id="49">
        <label>sirplatform.h</label>
        <link refid="db/ddc/sirplatform_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>pthread.h</label>
      </node>
      <node id="59">
        <label>sys/types.h</label>
      </node>
      <node id="57">
        <label>string.h</label>
      </node>
      <node id="48">
        <label>sir.h</label>
        <link refid="sir.h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>unistd.h</label>
      </node>
      <node id="60">
        <label>time.h</label>
      </node>
      <node id="66">
        <label>sirtypes.h</label>
        <link refid="dc/dba/sirtypes_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>sys/syscall.h</label>
      </node>
      <node id="67">
        <label>sirconfig.h</label>
        <link refid="d4/d0f/sirconfig_8h"/>
      </node>
      <node id="55">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="69">
        <label>sir.c</label>
        <link refid="dc/d39/sir_8c"/>
      </node>
      <node id="68">
        <label>sir.h</label>
        <link refid="sir.h"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d64/group__public_1ga14924d3a8225bea378ad568a426be99a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_init</definition>
        <argsstring>(const sirinit *si)</argsstring>
        <name>sir_init</name>
        <param>
          <type>const <ref refid="d2/ddf/structsirinit" kindref="compound">sirinit</ref> *</type>
          <declname>si</declname>
        </param>
        <briefdescription>
<para>Initializes the library. </para>        </briefdescription>
        <detaileddescription>
<para>Any thread may initialize SIR, but any calls to other library functions will fail until this call has completed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>si</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization options.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>SIR is initialized and ready to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization failed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="50" column="1" bodyfile="sir.c" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga3c56bf2c5a65e66b7b08e1c4abadf07a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_cleanup</definition>
        <argsstring>()</argsstring>
        <name>sir_cleanup</name>
        <briefdescription>
<para>Frees allocated resources and resets internal state. </para>        </briefdescription>
        <detaileddescription>
<para>It is not necessary to call this function from the same thread that called <ref refid="d8/d64/group__public_1ga14924d3a8225bea378ad568a426be99a" kindref="member">sir_init</ref>. Any calls made after this to functions other than to <ref refid="d8/d64/group__public_1ga14924d3a8225bea378ad568a426be99a" kindref="member">sir_init</ref> <emphasis></emphasis>(in order to re-initialize) will fail.</para><para><simplesect kind="note"><para>Mutexes allocated during initialization are <emphasis>not</emphasis> destroyed during cleanup; they are retained for potential further re-initialization.</para></simplesect>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>SIR is cleaned up. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>An error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="66" column="1" bodyfile="sir.c" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga3580e004c0c568c225a6d1a1bc5e9ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_debug</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_debug</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted debug-level message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a3553c8c2c35e70495b8f8e826aa3ff9b" kindref="member">SIRL_DEBUG</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="81" column="1" bodyfile="sir.c" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga707b1de6ceee2e3091b7d4ecf0f8758e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_info</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_info</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted informational message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a5882fd7e849f6a3c1c7967bde4ef4f7d" kindref="member">SIRL_INFO</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="96" column="1" bodyfile="sir.c" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1gab17d7622664c42afaafa66c53542dfeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_notice</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_notice</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted notice message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a721700c8091aab00db0b87b53f6eb53a" kindref="member">SIRL_NOTICE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="111" column="1" bodyfile="sir.c" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga3c4ca38dbb2a5e99e2d862dfdbd6f97a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_warn</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_warn</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted warning message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a9bfe1efbd321a009ad518b2eaec35881" kindref="member">SIRL_WARN</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="126" column="1" bodyfile="sir.c" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1gace667f9ba844f541bc41c61c94ed93f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_error</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_error</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted error message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a9c687f088db1de838ea5d5f8a8beed76" kindref="member">SIRL_ERROR</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="141" column="1" bodyfile="sir.c" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga29cff3ca15309cca61066870674f54c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_crit</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_crit</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted critical error message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a803f36256e5e4e3b788b7fa3a267a435" kindref="member">SIRL_CRIT</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="156" column="1" bodyfile="sir.c" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga48e9fb49c28b31a09d48eb0e90468679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_alert</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_alert</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted alert message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a8ea85ed68763f9c00d5ceeeaaf550955" kindref="member">SIRL_ALERT</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="171" column="1" bodyfile="sir.c" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1gabace08a061ddb85494e28bd3a518bb58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_emerg</definition>
        <argsstring>(const sirchar_t *format,...)</argsstring>
        <name>sir_emerg</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a formatted emergency message. </para>        </briefdescription>
        <detaileddescription>
<para>This function maps internally to the logging level <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a4ea9abe160c997d126806c4cca7f0cdc" kindref="member">SIRL_EMERG</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>A printf-style format string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis></emphasis>(variadic) Additional arguments whose types correspond to the format specifier at the same index in <computeroutput>format</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All destinations registered for this level were successfully processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more destinations were not successfully processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="186" column="1" bodyfile="sir.c" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga18adb1b96d90816ed91a4259604f84f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sir_addfile</definition>
        <argsstring>(const sirchar_t *path, sir_levels levels, sir_options opts)</argsstring>
        <name>sir_addfile</name>
        <param>
          <type>const <ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="d8/d64/group__public_1ga7ee5f2908abd2df9e89bcab0b6608edd" kindref="member">sir_levels</ref></type>
          <declname>levels</declname>
        </param>
        <param>
          <type><ref refid="d8/d64/group__public_1ga858fff8dae5b79ae8849a8021a53c18c" kindref="member">sir_options</ref></type>
          <declname>opts</declname>
        </param>
        <briefdescription>
<para>Add a log file to receive formatted output for one or more <ref refid="d8/d64/group__public_1ga4a3303c67acd49bea38fd3565d458cb2" kindref="member">sir_level</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute or relative path to the file. If it does not exist, it will be created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>levels</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more <ref refid="d8/d64/group__public_1ga4a3303c67acd49bea38fd3565d458cb2" kindref="member">sir_level</ref> for which the file should be sent output. Use <ref refid="d8/d64/group__public_1gga4a3303c67acd49bea38fd3565d458cb2a4aa4a7193f36bf34a21ab48a17ffc444" kindref="member">SIRL_ALL</ref> to send all logging levels to the file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero or more <ref refid="d8/d64/group__public_1ga9ed1c599dfd76231f4e0dadf46bff40b" kindref="member">sir_option</ref> flags used to control output formatting.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Non-negative</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptor for the file that was successfully added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="d8/d64/group__public_1ga39001e0bb2b7e4d0f6a4c6278dbd63ce" kindref="member">SIR_INVALID</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>An error occurred while trying to add the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="201" column="1" bodyfile="sir.c" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1ga34a36373db97dc24db8e53ff3843ba04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_remfile</definition>
        <argsstring>(int id)</argsstring>
        <name>sir_remfile</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Remove a previously added log file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer file descriptor returned from <ref refid="d8/d64/group__public_1ga18adb1b96d90816ed91a4259604f84f1" kindref="member">sir_addfile</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The file was removed and will no longer receive output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>An error occurred while trying to remove the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="212" column="1" bodyfile="sir.c" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="d8/d64/group__public_1gaa628fae976081e7aaa302e5c5e43e06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sir_settextstyle</definition>
        <argsstring>(sir_level level, sir_textstyle style)</argsstring>
        <name>sir_settextstyle</name>
        <param>
          <type><ref refid="d8/d64/group__public_1ga4a3303c67acd49bea38fd3565d458cb2" kindref="member">sir_level</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="d8/d64/group__public_1ga3bd5959a607e5280a8db90ada2d80caf" kindref="member">sir_textstyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Sets the text style in <emphasis>stdio</emphasis> output for a <ref refid="d8/d64/group__public_1ga4a3303c67acd49bea38fd3565d458cb2" kindref="member">sir_level</ref> of output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level <emphasis></emphasis>(only one is permitted per call) for which the style will be set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Foreground color, background color, and brightness control flags bitwise OR&apos;d to create the text style for <computeroutput>level</computeroutput>. See <ref refid="d8/d64/group__public_1ga3bd5959a607e5280a8db90ada2d80caf" kindref="member">sir_textstyle</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The style is valid and was applied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>An error occurred while trying to set the text style. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sir.h" line="226" column="1" bodyfile="sir.c" bodystart="82" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions for the public interface. </para>    </briefdescription>
    <detaileddescription>
<para>If you are a simple user of the library, the contents of this file as well as the following should be sufficient for basic custom configuration:</para><para><itemizedlist>
<listitem><para><ref refid="d0/dd1/sirdefaults_8h" kindref="compound">sirdefaults.h</ref><itemizedlist>
<listitem><para>Default text styling for each logging level and default formatting options for various types of destinations.</para></listitem></itemizedlist>
</para></listitem><listitem><para><ref refid="dc/dba/sirtypes_8h" kindref="compound">sirtypes.h</ref><itemizedlist>
<listitem><para>Enums, structs, and other types used by SIR.</para></listitem></itemizedlist>
</para></listitem><listitem><para><ref refid="d4/d0f/sirconfig_8h" kindref="compound">sirconfig.h</ref><itemizedlist>
<listitem><para>Macros that control formatting, limitations and more. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="preprocessor">#ifndef<sp/>_SIR_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SIR_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/ddc/sirplatform_8h" kindref="compound">sirplatform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/dba/sirtypes_8h" kindref="compound">sirtypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga14924d3a8225bea378ad568a426be99a" kindref="member">sir_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/ddf/structsirinit" kindref="compound">sirinit</ref>*<sp/>si);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga3c56bf2c5a65e66b7b08e1c4abadf07a" kindref="member">sir_cleanup</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga3580e004c0c568c225a6d1a1bc5e9ea2" kindref="member">sir_debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga707b1de6ceee2e3091b7d4ecf0f8758e" kindref="member">sir_info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1gab17d7622664c42afaafa66c53542dfeb" kindref="member">sir_notice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga3c4ca38dbb2a5e99e2d862dfdbd6f97a" kindref="member">sir_warn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1gace667f9ba844f541bc41c61c94ed93f3" kindref="member">sir_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga29cff3ca15309cca61066870674f54c3" kindref="member">sir_crit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga48e9fb49c28b31a09d48eb0e90468679" kindref="member">sir_alert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1gabace08a061ddb85494e28bd3a518bb58" kindref="member">sir_emerg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga18adb1b96d90816ed91a4259604f84f1" kindref="member">sir_addfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga1d2f790e2dabc69c8a625f2ee5dc583a" kindref="member">sirchar_t</ref>*<sp/>path,<sp/><ref refid="d8/d64/group__public_1ga7ee5f2908abd2df9e89bcab0b6608edd" kindref="member">sir_levels</ref><sp/>levels,<sp/><ref refid="d8/d64/group__public_1ga858fff8dae5b79ae8849a8021a53c18c" kindref="member">sir_options</ref><sp/>opts);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1ga34a36373db97dc24db8e53ff3843ba04" kindref="member">sir_remfile</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d64/group__public_1gaa628fae976081e7aaa302e5c5e43e06c" kindref="member">sir_settextstyle</ref>(<ref refid="d8/d64/group__public_1ga4a3303c67acd49bea38fd3565d458cb2" kindref="member">sir_level</ref><sp/>level,<sp/><ref refid="d8/d64/group__public_1ga3bd5959a607e5280a8db90ada2d80caf" kindref="member">sir_textstyle</ref><sp/>style);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!_SIR_H_INCLUDED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="sir.h"/>
  </compounddef>
</doxygen>
