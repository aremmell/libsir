.TH "md__t_o_d_o" 3 "Mon May 29 2023" "Version 2.1.1" "libsir" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__t_o_d_o \- TODO 
.PP

.IP "\(bu" 2
[ ] BUG: SIRO_ALL is not effectively SIRO_MSGONLY; it’s the opposite\&. It should be called SIRO_NONE
.IP "\(bu" 2
[ ] BUG: if NO_TIME and NO_NAME are set, but TID and PID are present, there’s no space between the message
.IP "\(bu" 2
[ ] _SIR_E_NODEST is not really an error\&. it just means nobody wanted that level at that particular time\&.
.IP "\(bu" 2
[ ] Implement “last message repeated n times”
.IP "\(bu" 2
[ ] Tests:
.IP "  \(bu" 4
[ ] Better level/option validation testing
.IP "  \(bu" 4
[ ] Filesystem
.IP "    \(bu" 6
[ ] Path as long as can fit in the PATH_MAX/MAX_PATH
.IP "    \(bu" 6
[ ] Invalid paths of all kinds:
.IP "      \(bu" 8
[ ] Malformed
.IP "      \(bu" 8
[ ] Deleted/moved from underneath the operations
.IP "      \(bu" 8
[ ] Invalid characters
.IP "      \(bu" 8
[ ] Test file existence of files in directories we don’t have permission to examine and differentiate that from actually not existing
.IP "      \(bu" 8
[ ] “C:\\” and “/”
.IP "      \(bu" 8
[ ] Mix-and-match slashes on windows
.IP "      \(bu" 8
[ ] Symlinks
.PP

.PP

.IP "  \(bu" 4
[ ] filesystem implementation
.PP

.IP "\(bu" 2
[ ] Go through sirfilecache and replace any code possible with the new filesystem calls
.IP "  \(bu" 4
[ ] Implement 256-color and RGB\&.
.IP "  \(bu" 4
[ ] Pull styling up into its own module for reusability in other projects
.PP

.IP "\(bu" 2
[ ] New preprocessor defines–add to Makefile and docs
.IP "  \(bu" 4
[ ] SIR_ASSERT_ON_ERROR
.IP "  \(bu" 4
[ ] On platforms != windows (that have syslog):
.IP "    \(bu" 6
[ ] Disable syslog at initialization time:
.IP "    \(bu" 6
[ ] Disable os_log and syslog at initialization time: \fBSIR_NO_SYSTEM_LOGGERS\fP
.PP

.IP "  \(bu" 4
[ ] Conditional logging (debug_if(), etc\&.)
.PP

.IP "\(bu" 2
[ ] Add to index\&.md (and rebuild Docs):
.IP "  \(bu" 4
[ ] Check for unresolved :: and \fBand\fP \fIand\fP \fCetc\fP, and normalize the usage\&.
.IP "  \(bu" 4
[ ] That there’s a VS2022 solution and projects now
.IP "  \(bu" 4
[ ] That there’s a C++ header w/ boost::format adapter (or delete it and start over)
.IP "  \(bu" 4
[ ] That there’s \fCsyslog\fP and \fCos_log\fP support now
.PP

.IP "\(bu" 2
[ ] Try again to figure out why in 2023 there’s no \fCstdatomic\&.h\fPsupport in VS2022… maybe clang will compile it?
.IP "\(bu" 2
[ ] Go through \fBsir\&.hh\fP and write Doxygen comments before rebuilding docs (or delete it and start over)
.IP "  \(bu" 4
[ ] Search for “SIR” and replace with “libsir”
.IP "  \(bu" 4
[ ] Same for “SIR_NOSYSLOG” 
.PP

.PP

