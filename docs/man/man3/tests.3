.TH "tests" 3 "Mon May 29 2023" "Version 2.1.1" "libsir" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tests \- Tests
.PP
 \- libsir integrity tests\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBsirtest_mthread_race\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_exceedmaxsize\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_filecachesanity\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failsetinvalidstyle\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failnooutputdest\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failinvalidfilename\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failfilebadpermission\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failnulls\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failwithoutinit\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failinittwice\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failaftercleanup\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_initcleanupinit\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_faildupefile\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_failremovebadfile\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_rollandarchivefile\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_errorsanity\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_textstylesanity\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_perf\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_updatesanity\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_syslog\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_os_log\fP (void)"
.br
.ti -1c
.RI "bool \fBsirtest_filesystem\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
libsir integrity tests\&. 


.SH "Function Documentation"
.PP 
.SS "bool sirtest_errorsanity (void)"

.PP
\fBTest\fP
.RS 4
Properly return valid codes and messages for all possible errors\&. 
.RE
.PP

.PP
Definition at line \fB470\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_exceedmaxsize (void)"

.PP
\fBTest\fP
.RS 4
Properly handle messages that exceed internal buffer sizes\&. 
.RE
.PP

.PP
Definition at line \fB127\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failaftercleanup (void)"

.PP
\fBTest\fP
.RS 4
Properly handle calls after cleanup\&. 
.RE
.PP

.PP
Definition at line \fB325\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_faildupefile (void)"

.PP
\fBTest\fP
.RS 4
Properly refuse to add a duplicate file\&. 
.RE
.PP

.PP
Definition at line \fB354\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failfilebadpermission (void)"

.PP
\fBTest\fP
.RS 4
Properly handle log file without appropriate permissions\&. 
.RE
.PP

.PP
Definition at line \fB269\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failinittwice (void)"

.PP
\fBTest\fP
.RS 4
Properly handle two initialization calls without corresponding cleanup\&. 
.RE
.PP

.PP
Definition at line \fB311\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failinvalidfilename (void)"

.PP
\fBTest\fP
.RS 4
Properly handle invalid log file name\&. 
.RE
.PP

.PP
Definition at line \fB256\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failnooutputdest (void)"

.PP
\fBTest\fP
.RS 4
Properly handle the lack of any output destinations\&. 
.RE
.PP

.PP
Definition at line \fB225\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failnulls (void)"

.PP
\fBTest\fP
.RS 4
Properly handle null/empty input\&. 
.RE
.PP

.PP
Definition at line \fB288\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failremovebadfile (void)"

.PP
\fBTest\fP
.RS 4
Properly refuse to remove a file that isn't added\&. 
.RE
.PP

.PP
Definition at line \fB370\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failsetinvalidstyle (void)"

.PP
\fBTest\fP
.RS 4
Properly handle invalid text style\&. 
.RE
.PP

.PP
Definition at line \fB209\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_failwithoutinit (void)"

.PP
\fBTest\fP
.RS 4
Properly handle calls without initialization\&. 
.RE
.PP

.PP
Definition at line \fB302\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_filecachesanity (void)"

.PP
\fBTest\fP
.RS 4
Properly handle adding and removing log files\&. 
.RE
.PP

.PP
Definition at line \fB140\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_filesystem (void)"

.PP
\fBTest\fP
.RS 4
Ensure the proper functionality of portable filesystem implementation\&. 
.RE
.PP

.PP
Definition at line \fB802\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_initcleanupinit (void)"

.PP
\fBTest\fP
.RS 4
Properly handle initialization, cleanup, re-initialization\&. 
.RE
.PP

.PP
Definition at line \fB338\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_mthread_race (void)"

.PP
\fBTest\fP
.RS 4
Properly handle multiple threads competing for locked sections\&. 
.RE
.PP

.PP
Definition at line \fB839\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_os_log (void)"

.PP
\fBTest\fP
.RS 4
Properly open, configure, and send messages to os_log()\&.
.RE
.PP
.PP
\fBNote\fP
.RS 4
macOS only\&. 
.RE
.PP

.PP
Definition at line \fB772\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_perf (void)"

.PP
\fBTest\fP
.RS 4
Performance evaluation\&. 
.RE
.PP

.PP
Definition at line \fB568\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_rollandarchivefile (void)"

.PP
\fBTest\fP
.RS 4
Properly roll/archive a file when it hits max size\&. 
.RE
.PP

.PP
Definition at line \fB381\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_syslog (void)"

.PP
\fBTest\fP
.RS 4
Properly open, configure, and send messages to syslog()\&. 
.RE
.PP

.PP
Definition at line \fB744\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_textstylesanity (void)"

.PP
\fBTest\fP
.RS 4
Properly style stdio output for each level, and handle style overrides\&. 
.RE
.PP

.PP
Definition at line \fB509\fP of file \fBtests\&.c\fP\&.
.SS "bool sirtest_updatesanity (void)"

.PP
\fBTest\fP
.RS 4
Properly update levels/options at runtime\&. 
.RE
.PP

.PP
Definition at line \fB652\fP of file \fBtests\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libsir from the source code\&.
