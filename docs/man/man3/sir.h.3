.TH "sir.h" 3 "Mon May 29 2023" "Version 2.1.1" "libsir" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sir.h \- Public interface\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'sirplatform\&.h'\fP
.br
\fC#include 'sirtypes\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBsir_init\fP (\fBsirinit\fP *si)"
.br
.RI "Initializes libsir\&. "
.ti -1c
.RI "bool \fBsir_stdoutlevels\fP (\fBsir_levels\fP levels)"
.br
.RI "Sets levels sent to \fIstdout\fP\&. "
.ti -1c
.RI "bool \fBsir_stdoutopts\fP (\fBsir_options\fP opts)"
.br
.RI "Sets formatting options for \fIstdout\fP\&. "
.ti -1c
.RI "bool \fBsir_stderrlevels\fP (\fBsir_levels\fP levels)"
.br
.RI "Sets levels sent to \fIstderr\fP\&. "
.ti -1c
.RI "bool \fBsir_stderropts\fP (\fBsir_options\fP opts)"
.br
.RI "Sets formatting options for \fIstderr\fP\&. "
.ti -1c
.RI "bool \fBsir_sysloglevels\fP (\fBsir_levels\fP levels)"
.br
.RI "Sets levels sent to \fIsyslog\fP (if available)\&. "
.ti -1c
.RI "bool \fBsir_filelevels\fP (\fBsirfileid_t\fP id, \fBsir_levels\fP levels)"
.br
.RI "Sets levels sent to a log file\&. "
.ti -1c
.RI "bool \fBsir_fileopts\fP (\fBsirfileid_t\fP id, \fBsir_options\fP opts)"
.br
.RI "Sets formatting options for a log file\&. "
.ti -1c
.RI "bool \fBsir_cleanup\fP (void)"
.br
.RI "Frees allocated resources and resets internal state\&. "
.ti -1c
.RI "uint16_t \fBsir_geterror\fP (\fBsirchar_t\fP message[256])"
.br
.RI "Retrieves information about the last error that occurred within the context of libsir or lower\&. "
.ti -1c
.RI "bool \fBsir_debug\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted debug-level message\&. "
.ti -1c
.RI "bool \fBsir_info\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted informational message\&. "
.ti -1c
.RI "bool \fBsir_notice\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted notice message\&. "
.ti -1c
.RI "bool \fBsir_warn\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted warning message\&. "
.ti -1c
.RI "bool \fBsir_error\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted error message\&. "
.ti -1c
.RI "bool \fBsir_crit\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted critical error message\&. "
.ti -1c
.RI "bool \fBsir_alert\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted alert message\&. "
.ti -1c
.RI "bool \fBsir_emerg\fP (const \fBsirchar_t\fP *format,\&.\&.\&.)"
.br
.RI "Log a formatted emergency message\&. "
.ti -1c
.RI "\fBsirfileid_t\fP \fBsir_addfile\fP (const \fBsirchar_t\fP *path, \fBsir_levels\fP levels, \fBsir_options\fP opts)"
.br
.RI "Add a log file to receive formatted output for one or more \fBsir_level\fP\&. "
.ti -1c
.RI "bool \fBsir_remfile\fP (\fBsirfileid_t\fP id)"
.br
.RI "Remove a previously added log file\&. "
.ti -1c
.RI "bool \fBsir_settextstyle\fP (\fBsir_level\fP level, \fBsir_textstyle\fP style)"
.br
.RI "Sets the text style in \fIstdio\fP output for a \fBsir_level\fP of output\&. "
.ti -1c
.RI "bool \fBsir_resettextstyles\fP (void)"
.br
.RI "Resets all \fIstdio\fP text styles to their default values\&. "
.in -1c
.SH "Detailed Description"
.PP 
Public interface\&. 

This file and accompanying source code originated from https://github.com/aremmell/libsir\&. If you obtained it elsewhere, all bets are off\&.
.PP
\fBAuthor\fP
.RS 4
Ryan M\&. Lederman lederman@gmail.com 
.RE
.PP
\fBVersion\fP
.RS 4
2\&.1\&.1 
.RE
.PP
\fBCopyright\fP
.RS 4
.RE
.PP
The MIT License (MIT)
.PP
Copyright (c) 2018 Ryan M\&. Lederman
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software\&.
.PP
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\&. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\&. 
.PP
Definition in file \fBsir\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libsir from the source code\&.
